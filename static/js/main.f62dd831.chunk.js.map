{"version":3,"sources":["api/apiSlice.js","features/game/gameSlice.ts","components/Avatar.tsx","features/game/Attempt.tsx","features/game/utils.ts","features/game/GameMain.tsx","features/game/useCounter.ts","img/you-lost.png","img/win.png","features/game/GameResult.tsx","features/game/GameInit.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx","app/store.ts","api/apiMiddleware.js"],"names":["apiSlice","createSlice","name","initialState","isConnected","reducers","connected","state","disconnected","actions","selectApi","api","selfId","Date","now","gameSlice","selfImg","opponentImg","isStarted","isSubmitting","attempts","startGame","payload","nextAttempts","map","item","user","id","profileImg","isSelf","submitAttempt","selectGame","game","selectGameInProgress","winner","isRoomFull","selectCanSubmit","turn","useStyles","makeStyles","theme","avatar","position","padding","avatarImage","display","out","height","top","left","in","width","Avatar","username","variant","classes","className","src","alt","aria-label","defaultProps","root","flexDirection","justifyContent","right","attemptDetails","flexShrink","flexGrow","detailsLeft","alignItems","detailsRight","selectedNumber","borderRadius","backgroundColor","labelText","marginTop","border","Attempt","number","text","newValue","attemptVariant","avatarVariant","attemptDetailsVariant","Typography","component","pickNumber","num","mod","paddingBottom","paddingTop","startNumberContainer","startingNumber","bottomBox","margin","spacing","bottom","toggleButton","marginLeft","color","button","minHeight","minWidth","fontSize","fontWeight","alertStyle","KeepScrollToBottom","elementRef","useRef","useEffect","current","scrollIntoView","behavior","ref","GameMain","handleAttempt","canSubmit","onLeftGame","otherProps","React","useState","checked","setChecked","initialValue","ms","count","setCount","finished","setFinished","intervalRef","start","useCallback","startTime","counter","setInterval","seconds","Math","round","Number","stop","clearInterval","reset","useCounter","isSingleUser","pickedNumber","len","length","pickCorrectNumber","setTimeout","onHandleAttempt","attempt","index","key","Box","playerTwo","content","Alert","severity","renderMessages","Button","disabled","onClick","FormGroup","FormControlLabel","control","Switch","onChange","prev","data-testid","label","imageContainer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundOrigin","lostImage","backgroundImage","lostImgUrl","winImage","winImgUrl","winMessageStyle","loseMessageStyle","GameResult","message","messageStyle","winLossImg","textAlign","buttonBox","title","margingTop","borderColor","loading","GameInit","initGame","boxShadow","Header","boxSizing","App","dispatch","useDispatch","useSelector","gameInProgress","socket","on","handleInitGame","emit","gameId","Boolean","window","location","hostname","match","store","middleware","getState","next","action","createSocketApiMiddleware","getDefaultMiddleware","configureStore","reducer","gameReducer","apiReducer","configStore","io","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f62dd831.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    isConnected: false,\n  },\n  reducers: {\n    connected: (state) => ({ ...state, isConnected: true }),\n\t\tdisconnected: (state) => ({ ...state, isConnected: false }),\n  },\n});\n\n// ACTIONS\n\nexport const { connected, disconnected } = apiSlice.actions;\n\n// ASYNC ACTIONS\n\nexport const subscribeApiConnect = () => (socket, dispatch) => {\n  socket.on('connect', () => dispatch(connected()));\n};\n\nexport const subscribeApiDisconnect = () => (socket, dispatch) => {\n\tsocket.on('disconnect', () => dispatch(disconnected()));\n};\n\n// SELECTOR\n\nexport const selectApi = (state) => state.api;\n\n// REDUCER \n\nexport default apiSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\nconst generateId = () => `${Date.now()}`;\r\nexport const selfId = generateId();\r\n\r\nexport const gameSlice = createSlice({\r\n  name: 'game',\r\n  initialState: {\r\n    selfId,\r\n    selfImg: 'player.png',\r\n    opponentImg: 'opponent.png',\r\n    isStarted: false,\r\n    isSubmitting: false,\r\n\t\tattempts: [],\r\n  },\r\n  reducers: {\r\n    startGame: (state, { payload }) => {\r\n      const attempts = payload.attempts;\r\n      const nextAttempts = attempts.map((item: any) => {\r\n        if (item.user.id === state.selfId) {\r\n          return {\r\n            ...item,\r\n            user: { ...item.user, profileImg: state.selfImg, isSelf: true },\r\n          };\r\n        } else {\r\n          return {\r\n            ...item,\r\n            user: { ...item.user, profileImg: state.opponentImg, isSelf: false },\r\n          };\r\n        }\r\n      });\r\n      return { ...state, ...payload, attempts: nextAttempts, isStarted: true, isSubmitting: false };\r\n    },\r\n    submitAttempt: (state) => ({ ...state, isSubmitting: true})\r\n  },\r\n});\r\n\r\n// ACTIONS \r\n\r\nexport const { startGame, submitAttempt } = gameSlice.actions;\r\n\r\n// ASYNC ACTIONS\r\n\r\nexport const subscribeGameStart = () => (socket: any, dispatch:any) => {\r\n  socket.on('game', (game: any) => {\r\n    // console.log('attempt-game-on: ', game);\r\n    // console.log('attempt-isRoomFull: ', isRoomFull);\r\n    dispatch(startGame(game))\r\n  });\r\n};\r\n\r\nexport const initGameStart = (attempt: any): AppThunk => (socket: any) => {\r\n  socket.emit('newgame', attempt);\r\n};\r\n\r\nexport const sendAttempt = (attempt: any): AppThunk => (socket: any, dispatch: any) => {\r\n  dispatch(submitAttempt());\r\n  socket.emit('turn', attempt);\r\n};\r\n\r\nexport const leftGame = () => (socket: any) => {\r\n  socket.emit('left');\r\n};\r\n\r\n// SELECTORS\r\n\r\nexport const selectGame = (state: RootState) => state.game;\r\n\r\nexport const selectGameInProgress = ({ game }: RootState) =>\r\n  game.isStarted && !game.winner && !game.isRoomFull\r\n\r\nexport const selectCanSubmit = ({ game }: RootState) =>\r\n  game.isStarted && game.turn === game.selfId && !game.isSubmitting;\r\n\r\n// REDUCER\r\n\r\nexport default gameSlice.reducer;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    position: 'relative',\n    padding: '0 20px',\n  },\n  avatarImage: {\n    position: 'relative',\n    display: 'block',\n    'z-index': '10',\n  },\n  out: {\n    height: '52px',\n    top: '-3px',\n    left: '3px',\n  },\n  in: {\n    width: '60px'\n  }\n}));\n\ntype Props = {\n  username?: any\n  profileImg?: string\n  variant?: 'out' | 'in',\n\n}\nconst Avatar = ({ username, profileImg, variant }: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.avatar}>\n      <img\n        className={`${classes.avatarImage} ${classes[variant?? 'out']}`}\n        src={profileImg}\n        alt={username}\n        aria-label={username}\n      />\n    </div>\n  );\n};\n\nAvatar.defaultProps = {\n  variant: 'out',\n  username: '',\n  profileImg: '../img/avatar.png',\n};\n\nAvatar.propTypes = {\n  profileImg: PropTypes.string,\n  username: PropTypes.string,\n  variant: PropTypes.oneOf(['out', 'in']),\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../components/Avatar';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  left: {\n    flexDirection: 'row',\n\t  justifyContent: 'flex-start',\n  },\n  right: {\n    flexDirection: 'row-reverse',\n\t  justifyContent: 'flex-end',\n  },\n  attemptDetails: {\n    flexShrink: 0,\n    flexGrow: 1,\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  detailsLeft: {\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  detailsRight: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n  selectedNumber: {\n    width: \"50px\",\n    height: \"50px\",\n    borderRadius: \"30px\",\n    backgroundColor: '#ff5722',\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  labelText: {\n    marginTop: '5px',\n    padding: '5px',\n    alignItems: 'center',\n    display: 'flex',\n    backgroundColor: '#ffffff',\n    border: '2px solid #3d5afe',\n  }\n}));\ninterface attemptProps {\n  user: any,\n  number: number,\n  text: string,\n  newValue: number,\n}\n\nconst Attempt = ({ user, number, text, newValue }: attemptProps) => {\n  const classes = useStyles();\n  const attemptVariant = user.isSelf ? 'left' : 'right';\n  const avatarVariant = user.isSelf ? 'out' : 'in';\n  const attemptDetailsVariant = user.isSelf ? 'detailsLeft' : 'detailsRight';\n  return (\n    <div className={`${classes.root} ${classes[attemptVariant]}`}>\n      <Avatar\n        profileImg={user.profileImg}\n        variant={avatarVariant}\n        username={user.username}\n      />\n      <div\n        className={`${classes.attemptDetails} ${classes[attemptDetailsVariant]}`}\n      >\n        <Typography variant=\"h5\" component=\"h6\" className={classes.selectedNumber}>\n          {number}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h6\" className={classes.labelText}>\n          {text}\n        </Typography>\n        <Typography variant=\"h6\" component=\"h6\" className={classes.labelText}>\n          {newValue}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nAttempt.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  number: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  newValue: PropTypes.number.isRequired,\n};\n\nexport default Attempt;\n","export const pickNumber = (num: number) => {\n\tconst mod = num % 3;\n\tif (mod === 0) {\n\t\treturn 0;\n\t} else if (mod === 1) {\n\t\treturn -1;\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Attempt from './Attempt';\nimport { useCounter } from './useCounter';\nimport { Box, Button, Theme, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { pickNumber } from './utils';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: '10px',\n    backgroundColor: '#2196f3',\n    paddingBottom: '280px',\n    paddingTop: '90px',\n    width: '100%',\n    height: '100%',\n  },\n  startNumberContainer: {\n    marginTop: '10px',\n    width: \"100%\",\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  startingNumber: {\n    width: \"100px\",\n    height: \"60px\",\n    borderRadius: \"30px\",\n    backgroundColor: '#ff5722',\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  bottomBox: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    position: 'fixed',\n    bottom: 0,\n    width: '100%',\n    backgroundColor: '#4dabf5',\n    'z-index': '100',\n  },\n  toggleButton: {\n    marginLeft: '10px',\n    color: '#ffffff'\n  },\n  button: {\n    padding: 5,\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"40px\",\n    minHeight: 0,\n    minWidth: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f50057',\n    margin: 10,\n    fontSize:\"16px\",\n    fontWeight: 'bold',\n    color: '#ffffff'\n  },\n  alertStyle: {\n    justifyContent: 'center',\n    width: '80%',\n  }\n}));\n\nconst KeepScrollToBottom = () => {\n  const elementRef: any = useRef();\n  useEffect(() => elementRef.current.scrollIntoView({behavior: \"smooth\"}));\n  return <div ref={elementRef} />;\n};\n\nconst pickCorrectNumber = (startingNumber: number, attempts: Array<any>) => {\n  const len = attempts.length;\n  if(len > 0) {\n    return pickNumber(attempts[len-1].newValue)\n  } else {\n    return pickNumber(startingNumber)\n  }\n}\n\ninterface MainProps {\n  startingNumber: number, \n  handleAttempt: Function \n  attempts: Array<any>, \n  canSubmit: boolean,\n  onLeftGame: Function,\n  otherProps: any,\n}\nconst GameMain = ({ startingNumber, handleAttempt, attempts, canSubmit, onLeftGame, ...otherProps }: MainProps) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n  const { count, start, stop, reset, finished } = useCounter(30, 1000);\n  useEffect(() => {\n    if(canSubmit) {\n      start();\n    }\n    return () => { stop();};\n  }, [canSubmit]);\n\n  useEffect(() => {\n    if(finished) {\n      onLeftGame();\n    }\n  }, [finished]);\n\n  useEffect(() => {\n    const { otherProps: {isSingleUser} } = otherProps;\n    if (!isSingleUser && checked && canSubmit) {\n      const pickedNumber = pickCorrectNumber(startingNumber, attempts);\n      setTimeout(() => {\n        handleAttempt(pickedNumber);\n      }, 1000);\n    }\n  }, [checked, canSubmit, attempts]);\n\n  const onHandleAttempt = (number: number) => {\n    handleAttempt(number);\n    reset();\n  }\n  const toggleChecked = () => {\n    setChecked((prev) => !prev);\n    reset();\n  };\n\n  const renderMessages = () => {\n    const { otherProps: {isSingleUser, playerTwo, turn} } = otherProps;\n    let content = null;\n    if(!isSingleUser && !canSubmit && !playerTwo && !turn){\n      content = `Please wait until another player start!`;\n    } else if(canSubmit) {\n      content  = `Your turn end in ${count} seconds`;\n    } else if(!canSubmit) {\n      content  = `Waiting opponent's turn...`;\n    }  \n    return <Alert severity=\"info\" variant=\"filled\" color=\"warning\" className={classes.alertStyle}>{content}</Alert>\n  }\n  return (\n    <>\n      \n      <div className={classes.root}>\n        <div className={classes.startNumberContainer}>\n          <Typography variant=\"h5\" component=\"h6\" className={classes.startingNumber}>\n            {startingNumber}\n          </Typography>\n        </div>\n        {attempts.map((attempt, index) => {\n          return <Attempt {...attempt} key={index} />;\n        })}\n        <KeepScrollToBottom />\n      </div>\n      <Box justifyContent=\"center\" display=\"flex\" className={classes.bottomBox}>\n        {renderMessages()}\n        \n        <Box flexDirection=\"row\"  justifyContent=\"center\" display=\"flex\" alignItems=\"center\">\n          <Button variant=\"contained\" className={classes.button} disabled={!canSubmit || checked} onClick={() => onHandleAttempt(-1)}>-1</Button>\n          <Button variant=\"contained\" className={classes.button} disabled={!canSubmit || checked} onClick={() => onHandleAttempt(0)}>0</Button>\n          <Button variant=\"contained\" className={classes.button} disabled={!canSubmit || checked} onClick={() => onHandleAttempt(1)}>1</Button>\n          {!otherProps.otherProps.isSingleUser && <FormGroup>\n          <FormControlLabel className={classes.toggleButton}\n            control={<Switch checked={checked} onChange={toggleChecked} color=\"primary\" data-testid=\"automate-toggle\"/>}\n            label=\"Automate\"\n          />\n        </FormGroup>}\n        </Box>\n        \n      </Box>\n    </>\n  );\n};\n\nGameMain.defaultProps = {\n  attempts: [],\n  otherProps: {},\n};\n\nGameMain.propTypes = {\n  startingNumber: PropTypes.number.isRequired,\n  handleAttempt: PropTypes.func,\n  attempts: PropTypes.array,\n  otherProps: PropTypes.shape({})\n};\n\nexport default GameMain;\n","import { useState, useCallback, useRef } from 'react';\n\nexport function useCounter(initialValue: number, ms: number) {\n  const [count, setCount] = useState(initialValue);\n\tconst [finished, setFinished] = useState(false);\n  const intervalRef: any = useRef(null);\n  const start = useCallback(() => {\n    if (intervalRef.current !== null) {\n      return;\n    }\n\t\tconst startTime = Date.now();\n\t\tconst counter = initialValue;\n\t\tsetFinished(false);\n\n    intervalRef.current = setInterval(() => {\n      const seconds = Math.round((Date.now() - startTime) / 1000);\n      const lapseSeconds = counter - seconds;\n\t\t\t// set counter\n\t\t\tsetCount(lapseSeconds);\n\t\t\t// validate user status\n\t\t\tif (Number(seconds) >= Number(counter)) {\n\t\t\t\tstop();\n\t\t\t\tsetFinished(true);\n\t\t\t}\n    }, ms);\n  }, []);\n\n  const stop = useCallback(() => {\n    if (intervalRef.current === null) {\n      return;\n    }\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n  }, []);\n  const reset = useCallback(() => {\n\t\tsetFinished(false);\n    setCount(initialValue);\n\t\tstop();\n\t\tstart();\n  }, []);\n  return { count, start, stop, reset, finished };\n}\n","export default __webpack_public_path__ + \"static/media/you-lost.380ad99a.png\";","export default __webpack_public_path__ + \"static/media/win.2b97f362.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport lostImgUrl from '../../img/you-lost.png';\nimport winImgUrl from '../../img/win.png'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: 'column',\n    height: '60%',\n  },\n  imageContainer:  {\n    height: '100%',\n    backgroundRepeat:'no-repeat',\n    backgroundPosition: 'center center',\n    backgroundSize: 'contain',\n    backgroundOrigin: 'contentBox',\n  },\n  lostImage: {\n    backgroundImage: `url(${lostImgUrl})`,\n  },\n  winImage: {\n    backgroundImage: `url(${winImgUrl})`,\n  },\n  winMessageStyle: {\n    marginTop: '10px',\n    color: '#8bc34a'\n  },\n  loseMessageStyle: {\n    marginTop: '10px',\n    color: '#f44336'\n  }\n}));\n\ninterface Props {\n  winner: string,\n  selfId: string,\n}\nconst GameResult = ({ winner, selfId }: Props) => {\n  const classes = useStyles();\n  const message = winner === selfId ? 'You won' : 'You lost';\n  const messageStyle = winner === selfId ? 'winMessageStyle' : 'loseMessageStyle';\n  const winLossImg = winner === selfId ? 'winImage' : 'lostImage';\n\n  return (\n    <div className={classes.root} data-testid=\"summary-component\">\n      <div className={`${classes.imageContainer} ${classes[winLossImg]}`} />\n      <Typography variant=\"h3\" component=\"h4\" className={`${classes[messageStyle]}`}>\n        {message}\n      </Typography>\n    </div>\n  );\n};\n\nexport default GameResult;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameResult from './GameResult';\nimport { Box, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: 'column',\n    justifyContent: 'center',\n    textAlign: 'center',\n    height: '100%',\n    paddingTop: '100px',\n  },\n  buttonBox: {\n    marginTop: '10px',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    margingTop: '10px',\n    color: '#ffffff',\n  },\n  alertStyle: {\n    margin: '10px',\n    justifyContent: 'center',\n  },\n  button: {\n    color: '#ffffff',\n    borderColor: '#ffffff'\n  },\n  loading: {\n    color: '#ff0000'\n  }\n}));\n\ninterface Props {\n  selfId: string, \n  winner: string,\n  initGame: (flag: boolean) => void,\n  isConnected: boolean,\n  isRoomFull: boolean,\n}\n\n\nconst GameInit = ({ selfId, winner, initGame, isConnected, isRoomFull }: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {!!winner && <GameResult selfId={selfId} winner={winner} />}\n        {!isConnected && (<Typography variant=\"h5\" component=\"h6\" className={classes.loading}>\n          Server is not not connected... \n        </Typography>)}\n        {isRoomFull && <Alert severity=\"info\" variant=\"filled\" color=\"warning\" className={classes.alertStyle}>\n          Room is full. Please try after some time!\n        </Alert>}\n        <Typography variant=\"h5\" component=\"h6\" color=\"primary\" className={classes.title}>\n          Choose your opponent\n        </Typography>\n        <Box justifyContent=\"center\" display=\"flex\" className={classes.buttonBox}>\n          <Button disabled={!isConnected} variant=\"outlined\" className={classes.button} onClick={() => initGame(true)} >Computer</Button>\n          <Button disabled={!isConnected} variant=\"outlined\" className={classes.button} onClick={() => initGame(false)}>Player</Button>\n        </Box>\n    </div>\n  );\n};\n\nGameInit.propTypes = {\n  isConnected: PropTypes.bool.isRequired,\n  initGame: PropTypes.func.isRequired,\n};\n\nexport default GameInit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from './Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    position: 'fixed',\n    top: 0,\n    backgroundColor: '#2196f3',\n    boxShadow: '0 8px 6px -6px black',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    'z-index': 100,\n  },\n  title: {\n    color: '#ffffff',\n  },\n}));\ninterface Props {\n  profileImg?: string\n}\nconst Header = ({ profileImg }: Props) => {\n  const classes = useStyles();\n  return (\n    <header className={classes.root}>\n      <Box display=\"flex\">\n        <Avatar profileImg={profileImg} />\n        <Box justifyContent=\"center\" flexDirection=\"column\" display=\"flex\">\n          <Typography variant=\"h6\" component=\"h6\" className={classes.title}>\n              Scoober Game\n          </Typography>\n          <Typography variant=\"subtitle1\" className={classes.title}>\n            Win the game or win the job\n          </Typography>\n        </Box>\n      </Box>\n      \n    </header>\n  );\n};\n\nHeader.propTypes = {\n  profileImg: PropTypes.string,\n};\n\nexport default Header;\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  subscribeApiConnect,\r\n  subscribeApiDisconnect,\r\n  selectApi,\r\n} from './api/apiSlice';\r\nimport {\r\n  subscribeGameStart,\r\n  selectGame,\r\n  selectGameInProgress,\r\n  selectCanSubmit,\r\n  initGameStart,\r\n  sendAttempt,\r\n  leftGame,\r\n} from './features/game/gameSlice';\r\nimport GameMain from './features/game/GameMain';\r\nimport GameInit from './features/game/GameInit';\r\nimport Header from './components/Header';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    backgroundColor: '#2196f3',\r\n    minWidth: '320px',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { id, selfId, startingNumber, winner, attempts, isRoomFull, selfImg, ...otherProps } = useSelector(\r\n    selectGame\r\n  );\r\n\r\n  const { isConnected } = useSelector(selectApi);\r\n  const gameInProgress = useSelector(selectGameInProgress);\r\n  const canSubmit = useSelector(selectCanSubmit);\r\n\r\n  useEffect(() => {\r\n    dispatch(subscribeApiConnect());\r\n    dispatch(subscribeApiDisconnect());\r\n    dispatch(subscribeGameStart());\r\n  }, [dispatch]);\r\n\r\n  const handleInitGame = (isSingleUser: boolean) =>\r\n    dispatch(initGameStart({ user: { id: selfId }, isSingleUser }));\r\n\r\n  const handleAttempt = (number: number) => {\r\n    if (canSubmit) {\r\n      dispatch(\r\n        sendAttempt({\r\n          gameId: id,\r\n          user: { id: selfId },\r\n          number,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onLeftGame = () => {\r\n    dispatch(leftGame());\r\n  }\r\n  const renderGame = () => {\r\n    if (gameInProgress) {\r\n      return (\r\n        <GameMain\r\n          handleAttempt={handleAttempt}\r\n          startingNumber={startingNumber}\r\n          attempts={attempts}\r\n          canSubmit={canSubmit}\r\n          onLeftGame={onLeftGame}\r\n          otherProps={otherProps}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <GameInit\r\n        initGame={handleInitGame}\r\n        isConnected={isConnected}\r\n        selfId={selfId}\r\n        winner={winner}\r\n        isRoomFull={isRoomFull}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box height=\"100vh\" display=\"flex\" flexDirection=\"column\" className={classes.root}>\r\n      <Header profileImg={selfImg} />\r\n      {renderGame()}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { io } from 'socket.io-client';\r\nimport './index.css';\r\nimport App from './App';\r\n// import { store } from './app/store';\r\nimport { configStore } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst url = 'http://localhost:5001';\r\nconst socket = io(url);\r\nconst store = configStore(socket);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport gameReducer from '../features/game/gameSlice';\r\nimport apiReducer from '../api/apiSlice';\r\nimport { createSocketApiMiddleware } from '../api/apiMiddleware';\r\n\r\nexport const configStore = (socket: any) => {\r\n  const apiMiddleware = createSocketApiMiddleware(socket);\r\n  const middleware = [apiMiddleware, ...getDefaultMiddleware()];\r\n  return configureStore({\r\n    reducer: {\r\n      game: gameReducer,\r\n      api: apiReducer,\r\n    },\r\n    middleware,\r\n  });\r\n};\r\n\r\nexport type RootState = ReturnType<any>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","export const createSocketApiMiddleware = (socket) => ({\n  dispatch,\n  getState,\n}) => (next) => (action) => {\n  if (typeof action === 'function') {\n    action(socket, dispatch, getState);\n  } else {\n    return next(action);\n  }\n};\n"],"sourceRoot":""}